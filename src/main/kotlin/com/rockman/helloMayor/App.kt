/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.rockman.helloMayor

import com.badlogic.gdx.Gdx
import com.badlogic.gdx.assets.AssetManager
import com.badlogic.gdx.backends.lwjgl.LwjglApplication
import com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration
import com.badlogic.gdx.graphics.GL20
import com.badlogic.gdx.graphics.g2d.SpriteBatch
import com.badlogic.gdx.scenes.scene2d.EventListener
import com.badlogic.gdx.scenes.scene2d.Stage
import com.badlogic.gdx.scenes.scene2d.ui.Label
import com.badlogic.gdx.scenes.scene2d.ui.Skin
import com.badlogic.gdx.scenes.scene2d.ui.Table
import com.rockman.helloMayor.stages.GameStage
import com.rockman.helloMayor.stages.MenuStage
import com.rockman.helloMayor.utils.Constants
import ktx.app.KtxApplicationAdapter
import ktx.assets.AssetGroup
import ktx.assets.getValue
import ktx.assets.loadOnDemand
import ktx.scene2d.Scene2DSkin
import ktx.scene2d.scene2d

class App: KtxApplicationAdapter {
    lateinit var stage: Stage
    lateinit var menuStage: Stage
    lateinit var gameStage: Stage
    lateinit var batch: SpriteBatch
    var am = AssetManager()
    override fun create() {
        super.create()
        //val rockman by am.loadOnDemand<AssetGroup>("rockman.atlas")
        Scene2DSkin.defaultSkin = Skin(Gdx.files.internal("uiskin.json"))
        gameStage = GameStage(this)
        menuStage = MenuStage(am, EventListener { _->stage = gameStage; true })
        stage = menuStage
        Gdx.input.inputProcessor = stage
        //rockman.
    }
    override fun render() {
        super.render()
        Gdx.gl.glClearColor(0f, 0f, 0.2f, 1f);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT)
        stage.act()
        stage.draw()
    }
}
fun main(args: Array<String>) {
    var config = LwjglApplicationConfiguration()
    config.width = 640
    config.height = 480
    config.title = Constants.GAME_TITLE
    LwjglApplication(App(), config)
}
