/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.rockman.helloMayor

import com.badlogic.gdx.Gdx
import com.badlogic.gdx.assets.AssetManager
import com.badlogic.gdx.backends.lwjgl.LwjglApplication
import com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration
import com.badlogic.gdx.graphics.GL20
import com.badlogic.gdx.graphics.OrthographicCamera
import com.badlogic.gdx.graphics.g2d.SpriteBatch
import com.badlogic.gdx.scenes.scene2d.EventListener
import com.badlogic.gdx.scenes.scene2d.Stage
import com.badlogic.gdx.scenes.scene2d.ui.Skin
import com.rockman.helloMayor.stages.GameStage
import com.rockman.helloMayor.stages.MenuStage
import com.rockman.helloMayor.utils.Constants
import ktx.app.KtxApplicationAdapter
import ktx.scene2d.Scene2DSkin


object App : KtxApplicationAdapter {
    lateinit var stage: Stage
    lateinit var menuStage: Stage
    lateinit var gameStage: Stage
    lateinit var batch: SpriteBatch
    var elapsedTime = 0f
    var am = AssetManager()
    override fun create() {
        super.create()
        //val rockman by am.loadOnDemand<AssetGroup>("rockman.atlas")
        Scene2DSkin.defaultSkin = Skin(Gdx.files.internal("uiskin.json"))
        gameStage = GameStage()
        menuStage = MenuStage(EventListener { _ -> stage = gameStage; Gdx.input.inputProcessor = stage; true })
        stage = gameStage
        Gdx.input.inputProcessor = stage

        var cam = gameStage.viewport.camera
        cam.viewportHeight*=2
        cam.viewportWidth*=2
        cam.update()
    }

    override fun render() {
        super.render()
        Gdx.gl.glClearColor(1f, 1f, 1f, 1f);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT)
        elapsedTime += Gdx.graphics.deltaTime
        stage.act()
        stage.draw()
    }
}

fun main(args: Array<String>) {
    var config = LwjglApplicationConfiguration()
    config.width = 200
    config.height = 200
    config.title = Constants.GAME_TITLE
    LwjglApplication(App, config)
}
