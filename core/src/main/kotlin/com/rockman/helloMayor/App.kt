/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.rockman.helloMayor

import com.badlogic.gdx.Gdx
import com.badlogic.gdx.InputMultiplexer
import com.badlogic.gdx.assets.AssetManager
import com.badlogic.gdx.assets.loaders.TextureLoader
import com.badlogic.gdx.graphics.GL20
import com.badlogic.gdx.graphics.OrthographicCamera
import com.badlogic.gdx.graphics.Texture
import com.badlogic.gdx.graphics.g2d.SpriteBatch
import com.badlogic.gdx.scenes.scene2d.EventListener
import com.badlogic.gdx.scenes.scene2d.Stage
import com.badlogic.gdx.scenes.scene2d.ui.Skin
import com.badlogic.gdx.utils.viewport.ScreenViewport
import com.badlogic.gdx.utils.viewport.Viewport
import com.rockman.helloMayor.listener.ViewListener
import com.rockman.helloMayor.stage.GameStage
import com.rockman.helloMayor.stage.MenuStage
import ktx.app.KtxApplicationAdapter
import ktx.scene2d.Scene2DSkin


object App : KtxApplicationAdapter {
    lateinit var stage: Stage
    lateinit var menuStage: Stage
    lateinit var gameStage: Stage
    lateinit var batch: SpriteBatch
    lateinit var viewport: Viewport
    lateinit var camera: OrthographicCamera
    var textureParameter: TextureLoader.TextureParameter = TextureLoader.TextureParameter()
    var elapsedTime = 0f
    var am = AssetManager()

    init {
        textureParameter.genMipMaps = true
        textureParameter.minFilter = Texture.TextureFilter.Linear
        textureParameter.magFilter = Texture.TextureFilter.Linear
    }

    override fun create() {
        super.create()
        //val rockman by am.loadOnDemand<AssetGroup>("rockman.atlas")
        Scene2DSkin.defaultSkin = Skin(Gdx.files.internal("uiskin.json"))
        gameStage = GameStage
        menuStage = MenuStage(EventListener { _ -> stage = gameStage; Gdx.input.inputProcessor = stage; true })
        stage = gameStage
        Gdx.input.inputProcessor = InputMultiplexer(stage, ViewListener)
        camera = gameStage.viewport.camera as OrthographicCamera
        camera.zoom = 4f
        //    camera.zo
        viewport = ScreenViewport(camera)
        viewport.apply()
    }

    override fun resize(width: Int, height: Int) {
        super.resize(width, height)
        viewport.update(width, height)
    }

    override fun render() {
        super.render()
        Gdx.gl.glClearColor(1f, 1f, 1f, 1f);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT)
        elapsedTime += Gdx.graphics.deltaTime
        stage.act()
        stage.draw()
    }

    @JvmStatic
    fun get(): App {
        return this
    }
}


